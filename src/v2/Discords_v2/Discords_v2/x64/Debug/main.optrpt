
    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -Qinline-factor: 100
  -Qinline-min-size: 30
  -Qinline-max-size: 230
  -Qinline-max-total-size: 2000
  -Qinline-max-per-routine: 10000
  -Qinline-max-per-compile: 500000


Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(33,1):INLINE REPORT START:(main(int, char **)) [471]
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(34,2):(1)-> INLINE: parseCommandLineArgs(int, char **)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(57,12):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(57,28):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, int)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(57,36):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,8):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,18):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,29):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,44):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,55):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,67):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,78):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,99):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,110):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,8):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,18):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,29):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,44):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,55):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,67):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,78):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,99):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,110):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
INLINE REPORT END

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(44,2)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(44,2):remark #17104: loop was not parallelized: existence of parallel dependence
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(44,2):remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(44,2):remark #15346: vector dependence: assumed OUTPUT dependence between dist_matrix_bsf_dist (46:31) and time (48:25)
LOOP END

    Report from: Code generation optimizations [cg]

F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(43,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(33,1):remark #34051: REGISTER ALLOCATION : [main] F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp:33

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r12 zmm0-zmm2]
        
    Routine temporaries
        Total         :     198
            Global    :      74
            Local     :     124
        Regenerable   :      45
        Spilled       :       4
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       5 [2.90e+001 ~ 12.6%]
            Writes    :       6 [1.70e+001 ~ 7.4%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_ostream<char, std::char_traits<char>>::sentry::sentry(std::basic_ostream<char, std::char_traits<char>>::sentry *, std::basic_ostream<char, std::char_traits<char>> &)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(121,4):remark #34051: REGISTER ALLOCATION : [??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream:121

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx rbx]
        
    Routine temporaries
        Total         :      62
            Global    :      41
            Local     :      21
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       1 [1.00e+000 ~ 1.8%]
        Spills        :       8 bytes*
            Reads     :       1 [1.00e+000 ~ 1.8%]
            Writes    :       1 [1.00e+000 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_ostream<char, std::char_traits<char>>::sentry::operator bool(const std::basic_ostream<char, std::char_traits<char>>::sentry *) const

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(152,4):remark #34051: REGISTER ALLOCATION : [??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream:152

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      22
            Global    :       0
            Local     :      22
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_ostream<char, std::char_traits<char>>::sentry::~sentry(std::basic_ostream<char, std::char_traits<char>>::sentry *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(140,19)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(140,19)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(140,19)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(140,19)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(140,19)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(140,19)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(439,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(439,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(439,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(135,4):remark #34051: REGISTER ALLOCATION : [??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream:135

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    9[ rax rdx rcx rbx rdi r8-r9 r12 zmm0]
        
    Routine temporaries
        Total         :     601
            Global    :     373
            Local     :     228
        Regenerable   :     145
        Spilled       :       3
        
    Routine stack
        Variables     :     427 bytes*
            Reads     :      42 [1.00e+000 ~ 1.7%]
            Writes    :      49 [2.00e+000 ~ 3.3%]
        Spills        :      24 bytes*
            Reads     :       3 [3.00e+000 ~ 5.0%]
            Writes    :       3 [3.00e+000 ~ 5.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_ostream<char, std::char_traits<char>>::_Sentry_base::~_Sentry_base(std::basic_ostream<char, std::char_traits<char>>::_Sentry_base *)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(105,4):remark #34051: REGISTER ALLOCATION : [??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream:105

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      29
            Global    :      21
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       1 [1.00e+000 ~ 3.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::use_facet<std::basic_ostream<char, std::char_traits<char>>::_Nput>(const std::locale &)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(55,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(56,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(501,2):remark #34051: REGISTER ALLOCATION : [??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale:501

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   10[ rax rdx rcx rbx rdi r8-r9 r14-r15 zmm0]
        
    Routine temporaries
        Total         :     728
            Global    :     538
            Local     :     190
        Regenerable   :      70
        Spilled       :       4
        
    Routine stack
        Variables     :     400 bytes*
            Reads     :      61 [1.62e-003 ~ 0.0%]
            Writes    :      59 [1.02e+000 ~ 1.4%]
        Spills        :      32 bytes*
            Reads     :       4 [4.00e+000 ~ 5.4%]
            Writes    :       4 [4.00e+000 ~ 5.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::locale::~locale(std::locale *)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(404,3):remark #34051: REGISTER ALLOCATION : [??1locale@std@@QEAA@XZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale:404

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx r8]
        
    Routine temporaries
        Total         :      28
            Global    :      21
            Local     :       7
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       1 [1.00e+000 ~ 3.2%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ostreambuf_iterator<char, std::char_traits<char>>::ostreambuf_iterator(std::ostreambuf_iterator<char, std::char_traits<char>> *, std::ostreambuf_iterator<char, std::char_traits<char>>::streambuf_type *)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\streambuf(635,3):remark #34051: REGISTER ALLOCATION : [??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\streambuf:635

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      23
            Global    :       0
            Local     :      23
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(797,4)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(797,4):remark #17104: loop was not parallelized: existence of parallel dependence
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\streambuf(200,15):remark #15333: loop was not vectorized: exception handling for a call prevents vectorization
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(810,4)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(810,4):remark #17104: loop was not parallelized: existence of parallel dependence
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\streambuf(200,15):remark #15333: loop was not vectorized: exception handling for a call prevents vectorization
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(822,8)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(822,8)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(822,8)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(822,8)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(822,8)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(822,8)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase(237,29):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(478,31):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(439,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase(237,29):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(478,31):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(439,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase(237,29):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(478,31):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(439,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream(782,2):remark #34051: REGISTER ALLOCATION : [??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\ostream:782

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   12[ rax rdx rcx r8-r12 r14-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     756
            Global    :     446
            Local     :     310
        Regenerable   :     157
        Spilled       :       3
        
    Routine stack
        Variables     :     503 bytes*
            Reads     :      50 [3.32e+000 ~ 2.1%]
            Writes    :      54 [7.88e+000 ~ 4.9%]
        Spills        :      24 bytes*
            Reads     :       3 [3.00e+000 ~ 1.9%]
            Writes    :       3 [3.00e+000 ~ 1.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: parseCommandLineArgs(int, char **)

    Report from: Interprocedural optimizations [ipo]

F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(56,1):INLINE REPORT START:(parseCommandLineArgs(int, char **)) [494]
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(57,12):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(57,28):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, int)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(57,36):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,8):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,18):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,29):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,44):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,55):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,67):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,78):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,99):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(62,110):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,8):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,18):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,29):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,44):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,55):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,67):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,78):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,99):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(70,110):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
INLINE REPORT END

    Report from: Code generation optimizations [cg]

F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp(56,1):remark #34051: REGISTER ALLOCATION : [?parseCommandLineArgs@@YAXHQEAPEAD@Z] F:\Users\admin\Documents\discords_discovery\src\v2\Discords_v2\Discords_v2\main.cpp:56

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rdi r8 r12]
        
    Routine temporaries
        Total         :     155
            Global    :      62
            Local     :      93
        Regenerable   :      29
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::exception::~exception(std::exception *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_Gexception@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      28
            Global    :      20
            Local     :       8
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::bad_cast::~bad_cast(std::bad_cast *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_Gbad_cast@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      28
            Global    :      20
            Local     :       8
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ctype<char>::~ctype(std::ctype<char> *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G?$ctype@D@std@@MEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      34
            Global    :      20
            Local     :      14
        Regenerable   :       1
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::~numpunct(std::numpunct<char> *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G?$numpunct@D@std@@MEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      32
            Global    :      20
            Local     :      12
        Regenerable   :       1
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>::~num_put(std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>> *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx rsi r8]
        
    Routine temporaries
        Total         :      25
            Global    :      19
            Local     :       6
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::exception::exception(std::exception *, const std::exception &)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(68,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(68,5):remark #34051: REGISTER ALLOCATION : [??0exception@std@@QEAA@AEBV01@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h:68

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rbp r8 zmm0]
        
    Routine temporaries
        Total         :      29
            Global    :      21
            Local     :       8
        Regenerable   :       2
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::exception::what(const std::exception *) const

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(90,5):remark #34051: REGISTER ALLOCATION : [?what@exception@std@@UEBAPEBDXZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h:90

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      24
            Global    :       0
            Local     :      24
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Reallocate_for<lambda [] type at line 43099, col. 35, const char *>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, lambda [] type at line 43099, col. 35, const char *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(3874,12)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(3861,3):remark #34051: REGISTER ALLOCATION : [??$_Reallocate_for@V<lambda_0>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_0>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring:3861

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r14]
        
    Routine temporaries
        Total         :      98
            Global    :      41
            Local     :      57
        Regenerable   :      37
        Spilled       :       7
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::bad_cast::bad_cast(std::bad_cast *, const std::bad_cast &)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(68,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_typeinfo.h(124,7):remark #34051: REGISTER ALLOCATION : [??0bad_cast@std@@QEAA@AEBV01@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_typeinfo.h:124

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rbx r8 zmm0]
        
    Routine temporaries
        Total         :      30
            Global    :      21
            Local     :       9
        Regenerable   :       3
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::bad_cast::~bad_cast(std::bad_cast *)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_typeinfo.h(124,7):remark #34051: REGISTER ALLOCATION : [??1bad_cast@std@@UEAA@XZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_typeinfo.h:124

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      23
            Global    :       0
            Local     :      23
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::do_decimal_point(const std::numpunct<char> *) const

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum(230,3):remark #34051: REGISTER ALLOCATION : [?do_decimal_point@?$numpunct@D@std@@MEBADXZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum:230

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      22
            Global    :       0
            Local     :      22
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::do_thousands_sep(const std::numpunct<char> *) const

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum(235,3):remark #34051: REGISTER ALLOCATION : [?do_thousands_sep@?$numpunct@D@std@@MEBADXZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum:235

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      22
            Global    :       0
            Local     :      22
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::do_grouping(const std::numpunct<char> *, std::string *) const

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum(242,18)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(478,31):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum(240,3):remark #34051: REGISTER ALLOCATION : [?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum:240

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   13[ rax rdx rcx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     123
            Global    :      76
            Local     :      47
        Regenerable   :      25
        Spilled       :       6
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       1 [1.00e+000 ~ 1.2%]
        Spills        :      48 bytes*
            Reads     :       6 [6.00e+000 ~ 7.1%]
            Writes    :       6 [6.00e+000 ~ 7.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::do_falsename(const std::numpunct<char> *, std::numpunct<char>::string_type *) const

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum(247,23)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(478,31):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum(245,3):remark #34051: REGISTER ALLOCATION : [?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum:245

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   13[ rax rdx rcx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     123
            Global    :      76
            Local     :      47
        Regenerable   :      25
        Spilled       :       6
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       1 [1.00e+000 ~ 1.2%]
        Spills        :      48 bytes*
            Reads     :       6 [6.00e+000 ~ 7.1%]
            Writes    :       6 [6.00e+000 ~ 7.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::do_truename(const std::numpunct<char> *, std::numpunct<char>::string_type *) const

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum(252,23)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(478,31):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum(250,3):remark #34051: REGISTER ALLOCATION : [?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum:250

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   13[ rax rdx rcx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     123
            Global    :      76
            Local     :      47
        Regenerable   :      25
        Spilled       :       6
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       1 [1.00e+000 ~ 1.2%]
        Spills        :      48 bytes*
            Reads     :       6 [6.00e+000 ~ 7.1%]
            Writes    :       6 [6.00e+000 ~ 7.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::_Tidy(std::numpunct<char> *)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum(256,3):remark #34051: REGISTER ALLOCATION : [?_Tidy@?$numpunct@D@std@@AEAAXXZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocnum:256

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rcx r13]
        
    Routine temporaries
        Total         :      28
            Global    :      19
            Local     :       9
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_String_alloc<std::_String_base_types<char, std::allocator<char>>>::_Alloc_proxy(std::_String_alloc<std::_String_base_types<char, std::allocator<char>>> *)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(1972,3):remark #34051: REGISTER ALLOCATION : [?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring:1972

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx r12]
        
    Routine temporaries
        Total         :      24
            Global    :      21
            Local     :       3
        Regenerable   :       2
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_String_alloc<std::_String_base_types<char, std::allocator<char>>>::_Free_proxy(std::_String_alloc<std::_String_base_types<char, std::allocator<char>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(1983,3)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(1980,3):remark #34051: REGISTER ALLOCATION : [?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring:1980

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx rdi]
        
    Routine temporaries
        Total         :      30
            Global    :      23
            Local     :       7
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       1 [1.00e+000 ~ 1.5%]
        Spills        :       8 bytes*
            Reads     :       1 [1.00e+000 ~ 1.5%]
            Writes    :       1 [1.00e+000 ~ 1.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(2443,3)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(2444,3)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(2441,3):remark #34051: REGISTER ALLOCATION : [??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring:2441

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    9[ rax rdx rcx rdi r8-r9 r12 r14-r15]
        
    Routine temporaries
        Total         :     107
            Global    :      68
            Local     :      39
        Regenerable   :      24
        Spilled       :       4
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       1 [1.00e+000 ~ 0.8%]
        Spills        :      32 bytes*
            Reads     :       4 [4.00e+000 ~ 3.3%]
            Writes    :       4 [4.00e+000 ~ 3.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>::_Mypunct>(const std::locale &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(514,12)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #17108: loop was not parallelized: insufficient computational work
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #15423: loop was not vectorized: has only one iteration
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(514,12)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #25401: memcopy(with guard) generated
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #17104: loop was not parallelized: existence of parallel dependence
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(514,12)
Multiversioned v2
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #17104: loop was not parallelized: existence of parallel dependence
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(514,12)
Remainder, Multiversioned v2
LOOP END
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(514,12)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #25401: memcopy(with guard) generated
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #17104: loop was not parallelized: existence of parallel dependence
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(514,12)
Multiversioned v2
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #17104: loop was not parallelized: existence of parallel dependence
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(514,12)
Remainder, Multiversioned v2
LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(670,2):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(55,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(56,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(501,2):remark #34051: REGISTER ALLOCATION : [??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale:501

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r10 r12-r13 zmm0]
        
    Routine temporaries
        Total         :     869
            Global    :     607
            Local     :     262
        Regenerable   :      97
        Spilled       :       5
        
    Routine stack
        Variables     :     512 bytes*
            Reads     :      68 [1.02e+000 ~ 1.2%]
            Writes    :      56 [2.08e+000 ~ 2.4%]
        Spills        :      40 bytes*
            Reads     :       5 [5.00e+000 ~ 5.9%]
            Writes    :       5 [5.00e+000 ~ 5.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Reallocate_grow_by<lambda [] type at line 43232, col. 4, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, char>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, lambda [] type at line 43232, col. 4, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, char)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(3908,12)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(484,31):remark #34026: call to memset implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(484,31):remark #34026: call to memset implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(3893,3):remark #34051: REGISTER ALLOCATION : [??$_Reallocate_grow_by@V<lambda_4>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K0D@Z@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_4>@?1??insert@01@QEAAAEAV01@00D@Z@_K2D@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring:3893

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     131
            Global    :      46
            Local     :      85
        Regenerable   :      37
        Spilled       :      10
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       4 [9.97e-001 ~ 0.7%]
            Writes    :       3 [1.00e+000 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: sprintf_s(char *, size_t, const char *, ...)

    Report from: Code generation optimizations [cg]

F:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\ucrt\stdio.h(1841,9):remark #34051: REGISTER ALLOCATION : [sprintf_s] F:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\ucrt\stdio.h:1841

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    9[ rax rdx rcx rdi r8-r12]
        
    Routine temporaries
        Total         :      42
            Global    :      23
            Local     :      19
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       1 [1.00e+000 ~ 2.0%]
            Writes    :       2 [2.00e+000 ~ 3.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __local_stdio_printf_options()

    Report from: Code generation optimizations [cg]

F:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\ucrt\corecrt_stdio_config.h(85,5):remark #34051: REGISTER ALLOCATION : [__local_stdio_printf_options] F:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\ucrt\corecrt_stdio_config.h:85

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    1[ rax]
        
    Routine temporaries
        Total         :      20
            Global    :       0
            Local     :      20
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Reallocate_for<lambda [] type at line 43122, col. 35, char>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, lambda [] type at line 43122, col. 35, char)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(3874,12)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(484,31):remark #34026: call to memset implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(3861,3):remark #34051: REGISTER ALLOCATION : [??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@0D@Z@D@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring:3861

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r14]
        
    Routine temporaries
        Total         :     100
            Global    :      41
            Local     :      59
        Regenerable   :      37
        Spilled       :       7
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Reallocate_grow_by<lambda [] type at line 43040, col. 4, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, char>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, lambda [] type at line 43040, col. 4, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, char)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(3908,12)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(484,31):remark #34026: call to memset implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(484,31):remark #34026: call to memset implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(3893,3):remark #34051: REGISTER ALLOCATION : [??$_Reallocate_grow_by@V<lambda_3>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_3>@?1??append@01@QEAAAEAV01@0D@Z@_KD@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring:3893

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     116
            Global    :      44
            Local     :      72
        Regenerable   :      37
        Spilled       :       9
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       2 [2.00e-003 ~ 0.0%]
            Writes    :       2 [2.00e-003 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::use_facet<std::ctype<char>>(const std::locale &)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(2470,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(55,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(56,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale(501,2):remark #34051: REGISTER ALLOCATION : [??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xlocale:501

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   11[ rax rdx rcx rbx rsi r8-r9 r14-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     733
            Global    :     538
            Local     :     195
        Regenerable   :      72
        Spilled       :       4
        
    Routine stack
        Variables     :     432 bytes*
            Reads     :      63 [1.38e-002 ~ 0.0%]
            Writes    :      59 [1.08e+000 ~ 1.4%]
        Spills        :      32 bytes*
            Reads     :       4 [4.00e+000 ~ 5.3%]
            Writes    :       4 [4.00e+000 ~ 5.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_String_alloc<std::_String_base_types<char, std::allocator<char>>>::~_String_alloc(std::_String_alloc<std::_String_base_types<char, std::allocator<char>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(1933,3)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(1931,3):remark #34051: REGISTER ALLOCATION : [??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring:1931

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx r14]
        
    Routine temporaries
        Total         :      50
            Global    :      41
            Local     :       9
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       1 [1.00e+000 ~ 1.5%]
        Spills        :       8 bytes*
            Reads     :       1 [1.00e+000 ~ 1.5%]
            Writes    :       1 [1.00e+000 ~ 1.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Immortalize_impl<std::_Iostream_error_category>(void *, void *, void **)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(600,2):remark #34051: REGISTER ALLOCATION : [??$_Immortalize_impl@V_Iostream_error_category@std@@@std@@YAHPEAX0PEAPEAX@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error:600

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx r8]
        
    Routine temporaries
        Total         :      24
            Global    :      19
            Local     :       5
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::make_error_code(std::error_code *, std::io_errc)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(355,2):remark #34051: REGISTER ALLOCATION : [?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error:355

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rdi r8 r12]
        
    Routine temporaries
        Total         :      31
            Global    :      23
            Local     :       8
        Regenerable   :       6
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ostreambuf_iterator<char, std::char_traits<char>>::failed(const std::ostreambuf_iterator<char, std::char_traits<char>> *) const

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\streambuf(668,3):remark #34051: REGISTER ALLOCATION : [?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\streambuf:668

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      22
            Global    :       0
            Local     :      22
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::unique_ptr<std::_Facet_base, std::default_delete<std::_Facet_base>>::~unique_ptr(std::unique_ptr<std::_Facet_base, std::default_delete<std::_Facet_base>> *)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\memory(2264,3):remark #34051: REGISTER ALLOCATION : [??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\memory:2264

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      24
            Global    :      19
            Local     :       5
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       1 [1.00e+000 ~ 3.6%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ios_base::failure::~failure(std::ios_base::failure *)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase(224,8):remark #34051: REGISTER ALLOCATION : [??1failure@ios_base@std@@UEAA@XZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase:224

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      23
            Global    :       0
            Local     :      23
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ios_base::failure::failure(std::ios_base::failure *, const std::ios_base::failure &)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(68,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(396,7):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase(224,8):remark #34051: REGISTER ALLOCATION : [??0failure@ios_base@std@@QEAA@AEBV012@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase:224

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    7[ rax rdx rcx rbx rbp r8 zmm0]
        
    Routine temporaries
        Total         :      32
            Global    :      21
            Local     :      11
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ios_base::failure::failure(std::ios_base::failure *, const char *, const std::error_code &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase(238,29)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase(238,29)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase(238,29)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase(238,29)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase(238,29)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase(237,29):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(478,31):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 8)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(413,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(55,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(56,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(414,11):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase(238,4):remark #34051: REGISTER ALLOCATION : [??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xiosbase:238

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     427
            Global    :     245
            Local     :     182
        Regenerable   :     110
        Spilled       :       8
        
    Routine stack
        Variables     :     236 bytes*
            Reads     :      35 [2.23e+001 ~ 7.0%]
            Writes    :      38 [3.01e+001 ~ 9.5%]
        Spills        :      64 bytes*
            Reads     :       9 [7.00e+000 ~ 2.2%]
            Writes    :       9 [7.00e+000 ~ 2.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Iostream_error_category::message(const std::_Iostream_error_category *, std::string *, int) const

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(520,11)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(524,12)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(478,31):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(516,3):remark #34051: REGISTER ALLOCATION : [?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error:516

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r12 r14-r15 zmm0]
        
    Routine temporaries
        Total         :     190
            Global    :     124
            Local     :      66
        Regenerable   :      32
        Spilled       :       6
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       1 [1.00e+000 ~ 1.1%]
        Spills        :      48 bytes*
            Reads     :      12 [6.00e+000 ~ 6.8%]
            Writes    :       6 [6.00e+000 ~ 6.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Iostream_error_category::name(const std::_Iostream_error_category *) const

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(511,3):remark #34051: REGISTER ALLOCATION : [?name@_Iostream_error_category@std@@UEBAPEBDXZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error:511

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      21
            Global    :       0
            Local     :      21
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Generic_error_category::message(const std::_Generic_error_category *, std::string *, int) const

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(497,11)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(478,31):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(495,3):remark #34051: REGISTER ALLOCATION : [?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error:495

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   13[ rax rdx rcx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     127
            Global    :      77
            Local     :      50
        Regenerable   :      25
        Spilled       :       6
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       1 [1.00e+000 ~ 1.1%]
        Spills        :      48 bytes*
            Reads     :       6 [6.00e+000 ~ 6.8%]
            Writes    :       6 [6.00e+000 ~ 6.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Generic_error_category::name(const std::_Generic_error_category *) const

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(490,3):remark #34051: REGISTER ALLOCATION : [?name@_Generic_error_category@std@@UEBAPEBDXZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error:490

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      21
            Global    :       0
            Local     :      21
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::system_error::system_error(std::system_error *, const std::system_error &)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(68,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(396,7):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(421,7):remark #34051: REGISTER ALLOCATION : [??0system_error@std@@QEAA@AEBV01@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error:421

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    7[ rax rdx rcx rbx rbp r8 zmm0]
        
    Routine temporaries
        Total         :      32
            Global    :      21
            Local     :      11
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_System_error::_System_error(std::_System_error *, const std::_System_error &)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(68,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(396,7):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(396,7):remark #34051: REGISTER ALLOCATION : [??0_System_error@std@@QEAA@AEBV01@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error:396

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    7[ rax rdx rcx rbx rdi r8 zmm0]
        
    Routine temporaries
        Total         :      31
            Global    :      21
            Local     :      10
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_System_error::_System_error(std::_System_error *, std::error_code, const std::string &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(413,2)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(413,2)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 8)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(413,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(55,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(56,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(414,11):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(415,3):remark #34051: REGISTER ALLOCATION : [??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r13 r15 zmm0]
        
    Routine temporaries
        Total         :     223
            Global    :     124
            Local     :      99
        Regenerable   :      55
        Spilled       :       6
        
    Routine stack
        Variables     :     152 bytes*
            Reads     :      15 [1.01e+001 ~ 5.2%]
            Writes    :      19 [1.50e+001 ~ 7.8%]
        Spills        :      48 bytes*
            Reads     :       6 [6.00e+000 ~ 3.1%]
            Writes    :       6 [6.00e+000 ~ 3.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_System_error::_Makestr(std::string *, std::error_code, std::string *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(405,13)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(408,12)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(408,12)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(408,12)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(409,10)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(409,3)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3) inlined into C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(409,3)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #17102: loop was not parallelized: not a parallelization candidate
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xutility(257,3):remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(478,31):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(478,31):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\xstring(2348,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\iosfwd(454,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(401,3):remark #34051: REGISTER ALLOCATION : [?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     485
            Global    :     238
            Local     :     247
        Regenerable   :     140
        Spilled       :      11
        
    Routine stack
        Variables     :      96 bytes*
            Reads     :      14 [1.04e+001 ~ 3.2%]
            Writes    :       7 [7.00e+000 ~ 2.1%]
        Spills        :      88 bytes*
            Reads     :      19 [7.23e+000 ~ 2.2%]
            Writes    :      14 [7.10e+000 ~ 2.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::error_category::equivalent(const std::error_category *, const std::error_code &, int) const

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(338,2):remark #34051: REGISTER ALLOCATION : [?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error:338

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx r8-r9]
        
    Routine temporaries
        Total         :      30
            Global    :      21
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::error_category::equivalent(const std::error_category *, int, const std::error_condition &) const

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(333,2):remark #34051: REGISTER ALLOCATION : [?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error:333

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx rsi r8]
        
    Routine temporaries
        Total         :      37
            Global    :      20
            Local     :      17
        Regenerable   :       2
        Spilled       :       1
        
    Routine stack
        Variables     :      24 bytes*
            Reads     :       2 [1.05e+000 ~ 2.6%]
            Writes    :       1 [1.00e+000 ~ 2.5%]
        Spills        :       8 bytes*
            Reads     :       1 [1.00e+000 ~ 2.5%]
            Writes    :       1 [1.00e+000 ~ 2.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::error_category::default_error_condition(const std::error_category *, std::error_condition *, int) const

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error(328,2):remark #34051: REGISTER ALLOCATION : [?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\system_error:328

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx r8]
        
    Routine temporaries
        Total         :      25
            Global    :       0
            Local     :      25
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::runtime_error::~runtime_error(std::runtime_error *)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\stdexcept(157,7):remark #34051: REGISTER ALLOCATION : [??1runtime_error@std@@UEAA@XZ] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\stdexcept:157

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      23
            Global    :       0
            Local     :      23
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::runtime_error::runtime_error(std::runtime_error *, const std::runtime_error &)

    Report from: Code generation optimizations [cg]

C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\vcruntime_exception.h(68,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\stdexcept(157,7):remark #34051: REGISTER ALLOCATION : [??0runtime_error@std@@QEAA@AEBV01@@Z] C:\Visual Studio\VC\Tools\MSVC\14.14.26428\include\stdexcept:157

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rbx r8 zmm0]
        
    Routine temporaries
        Total         :      30
            Global    :      21
            Local     :       9
        Regenerable   :       3
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ios_base::failure::~failure(std::ios_base::failure *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_Gfailure@ios_base@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      28
            Global    :      20
            Local     :       8
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Iostream_error_category::~_Iostream_error_category(std::_Iostream_error_category *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G_Iostream_error_category@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx rdi]
        
    Routine temporaries
        Total         :      25
            Global    :      19
            Local     :       6
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Generic_error_category::~_Generic_error_category(std::_Generic_error_category *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G_Generic_error_category@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx rdi]
        
    Routine temporaries
        Total         :      25
            Global    :      19
            Local     :       6
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::system_error::~system_error(std::system_error *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_Gsystem_error@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      28
            Global    :      20
            Local     :       8
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_System_error::~_System_error(std::_System_error *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G_System_error@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      28
            Global    :      20
            Local     :       8
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::runtime_error::~runtime_error(std::runtime_error *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_Gruntime_error@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      28
            Global    :      20
            Local     :       8
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
